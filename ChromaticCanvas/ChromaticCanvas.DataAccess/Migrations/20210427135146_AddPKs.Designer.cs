// <auto-generated />
using System;
using ChromaticCanvas.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChromaticCanvas.DataAccess.Migrations
{
    [DbContext(typeof(ChromaticCanvasDbContext))]
    [Migration("20210427135146_AddPKs")]
    partial class AddPKs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Attendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EventID");

                    b.HasIndex("UserID");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Booking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResourceID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("EventID");

                    b.HasIndex("ResourceID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Event", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("OrganizerID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Invoice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Member", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Payment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvoiceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("UserID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Resource", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Attendee", b =>
                {
                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventID");

                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Member", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Booking", b =>
                {
                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventID");

                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceID");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Event", b =>
                {
                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Member", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerID");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Payment", b =>
                {
                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceID");

                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Member", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ChromaticCanvas.ApplicationLogic.DataModel.Subscription", b =>
                {
                    b.HasOne("ChromaticCanvas.ApplicationLogic.DataModel.Member", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
